atasnap:
  prefix_exec: /home/sonata/src/hashpipe/src/
  prefix_lib: /home/sonata/dev/dm_hpguppi_daq/src/.libs/
  # hpguppi_plugin:
  logdir: /home/sonata/logs
  # command_prefix:
  setup_commands:
    - /opt/mnt/bin/kill_redis_gateway.sh $INSTANCE
    - pkill -ef hashpipe_status_monitor
    - ipcrm -a
  # post_commands:
  #   - sleep 5
  #   - /opt/mnt/bin/init_redis_gateway.sh $INSTANCE
  hashpipe_keyfile: /home/sonata
  environment:
    - ATASHAREDIR="/opt/mnt"
    - GEM_PATH=/home/sonata/.rvm/gems/ruby-2.1.10/bin
    # - LD_LIBRARY_PATH=/opt/mnt/lib:$LD_LIBRARY_PATH
    - LD_LIBRARY_PATH=/home/sonata/dev/dm_hpguppi_daq/src:/home/sonata/src/hashpipe/src:/opt/mnt/lib
    - PATH=/opt/mnt/bin:$PATH:/home/sonata/.rvm/rubies/ruby-2.1.10/bin:/home/sonata/.rvm/bin
    # sudo HASHPIPE_KEYFILE=/home/sonata PATH=/home/sonata/.rvm/rubies/ruby-2.1.10/bin:/home/sonata/.rvm/bin:$PATH GEM_PATH=/home/sonata/.rvm/gems/ruby-2.1.10/bin /opt/mnt/bin/init_redis_gateway.sh 0
  options:
    - IBVPKTSZ=42,16,8208
    - BINDPORT=10000
  instance_numanode_bind: [1, 0]
  instance_datadir: [/mnt/buf0, /mnt/buf1]
  instance_bindhost: [enp97s0f1, enp225s0f1]
  thread_mask_lengths:
    hpguppi_atasnap_pkt_to_FTP_transpose:
      8
    hpguppi_atasnap_ibv_voltage_only_thread:
      6
  subsystem_threads:
    ibv:
      - hpguppi_ibvpkt_thread
      - hpguppi_atasnap_ibv_voltage_thread
      - hpguppi_atasnap_pkt_to_FTP_transpose
      - hpguppi_atasnap_rawdisk_thread
    ibv_optimised:
      - hpguppi_ibvpkt_thread
      - hpguppi_atasnap_ibv_voltage_only_thread
      - hpguppi_atasnap_control_thread
      - hpguppi_atasnap_pkt_to_FTP_transpose
      - hpguppi_atasnap_rawdisk_thread
    pktsock:
      - hpguppi_atasnap_pktsock_thread
      - hpguppi_atasnap_pkt_to_FTP_transpose
      - hpguppi_atasnap_rawdisk_thread
    pktsock_optimised:
      - hpguppi_atasnap_pktsock_only_thread
      - hpguppi_atasnap_control_thread
      - hpguppi_atasnap_pkt_to_FTP_transpose
      - hpguppi_atasnap_rawdisk_thread
  cpu_core_count_config: #[16]
    16:
      instance_cpu_core_0: [0, 16]
      instance_subsystem_thread_masks:
        ibv:
          hpguppi_ibvpkt_thread: [10,26]
          hpguppi_atasnap_ibv_voltage_thread: [0, 16]

##################### Templates #####################
template_singular: # Singular System Configuration Definition
  # prefix_exec: /opt/mnt/bin/ # The directory for the hashpipe executable
  # prefix_lib: /opt/mnt/lib/ # The directory for the hpguppi_daq.so 
  # hpguppi_plugin: hpguppi_daq.so # The name of the hpguppi_daq plugin
  # logdir: # The directory to log to (if missing, no logging takes place)
  # command_prefix: # Commands to insert before `hashpipe` in the final command
  # setup_commands: # List of commands to run before starting the instance
  # post_commands: # List of commands to run after having started the instance
  # hashpipe_keyfile: # The value of the instance's HASHPIPE_KEYFILE environment variable
  # environment: # List of key=value environment variables for the instance
  # options: # List of status-buffer key=value options for the command (each prefixed with -o)
  # instance_numanode_bind: # $instance indexed list of numanode numbers to cpu/mem-bind the instance to (if missing numanode $instance is bound to)
  instance_datadir: # $instance indexed list of DATADIR values to set for the instance
    - /mnt/buf0
    - /mnt/buf1
  instance_bindhost: # $instance indexed list of DATADIR values to set for the instance
    - enp97s0f1
    - enp225s0f1
  # thread_mask_lengths: # thread_name=mask_length map of mask lengths for threads (otherwise assumed to be 1 (single-core threads))
  threads: # Sequential list of threads for an instance of the system
  cpu_core_count_config: [] # Either a simple list of core_counts supported 
  ########################### or
  # cpu_core_count_config:  # A core_count={} map of further configuration specifications
    # 16:
      # instance_cpu_core_0: # $instance indexed list of cpu_cores from which to start thread masking
      # instance_thread_masks: # thread=[instance_mask_list] map to $instance indexed lists of thread-masks (a thread-mask that is a list is possible for multi-core threads)
template_sub-multitudinous: # Mulitple Sub-System Configuration Definitions
  # prefix_exec: /opt/mnt/bin/ # The directory for the hashpipe executable
  # prefix_lib: /opt/mnt/lib/ # The directory for the hpguppi_daq.so 
  # hpguppi_plugin: hpguppi_daq.so # The name of the hpguppi_daq plugin
  # logdir: # The directory to log to (if missing, no logging takes place)
  # command_prefix: # Commands to insert before `hashpipe` in the final command
  # setup_commands: # List of commands to run before starting the instance
  # post_commands: # List of commands to run after having started the instance
  # hashpipe_keyfile: # The value of the instance's HASHPIPE_KEYFILE environment variable
  # environment: # List of key=value environment variables for the instance
  # options: # List of status-buffer key=value options for the command (each prefixed with -o)
  # instance_numanode_bind: # $instance indexed list of numanode numbers to cpu/mem-bind the instance to (if missing numanode $instance is bound to)
  instance_datadir: # $instance indexed list of DATADIR values to set for the instance
    - /mnt/buf0
    - /mnt/buf1
  instance_bindhost: # $instance indexed list of DATADIR values to set for the instance
    - enp97s0f1
    - enp225s0f1
  # thread_mask_lengths: # thread_name=mask_length map of mask lengths for threads (otherwise assumed to be 1 (single-core threads))
  subsystem_threads: # subsystem=[threads_list] map to
    $subsystem: # Sequential list of threads for an instance of the subsystem
  cpu_core_count_config: [] # Either a simple list of core_counts supported 
  ########################### or
  # cpu_core_count_config:  # A core_count={} map of further configuration specifications
    # 16:
      # instance_cpu_core_0: # $instance indexed list of cpu_cores from which to start thread masking
      # instance_subsystem_thread_masks: # subsystem={thread=[instance_mask_list]} map of thread maps 
        # $thread_name: to $instance indexed lists of thread-masks (a thread-mask that is a list is possible for multi-core threads)